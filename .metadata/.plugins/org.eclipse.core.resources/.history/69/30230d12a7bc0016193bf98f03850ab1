package fracCalc;
import java.util.*;
public class FracCalc {

    public static void main(String[] args) 
    {
    	Scanner input = new Scanner(System.in);
    	System.out.println("Give Expression");
    	String expression = input.nextLine();
    	while (expression.indexOf("quit") < 0){
    	String givenString = input.toString();
    	System.out.println(produceAnswer(givenString));
    	}
    	
        // TODO: Read the input from the user and call produceAnswer with an equation
    	
    }
    
    // ** IMPORTANT ** DO NOT DELETE THIS FUNCTION.  This function will be used to test your code
    // This function takes a String 'input' and produces the result
    //
    // input is a fraction string that needs to be evaluated.  For your program, this will be the user input.
    //      e.g. input ==> "1/2 + 3/4"
    //        
    // The function should return the result of the fraction after it has been calculated
    //      e.g. return ==> "1_1/4"
    public static String produceAnswer(String input)
    {     
        return (parseInput(input));
    }
 // TODO: Implement this function to produce the solution to the input
    // TODO: Fill in the space below with any helper methods that you think you will need
  
    
    public static String parseInput(String input){
    	String[] parsedExpression = input.split(" ");		 // Split by fractions and operators
    	return(parseOperands(parsedExpression));
    }
    public static String parseOperands(String[] operands){
    	String secondFrac = operands[2].toString();			 // Takes the second operand
    	String[] wholePart = secondFrac.split("_");				 // Creates new array for the split integers
    	int[] finalPieces = new int[2];					
    	int wholeNum = Integer.parseInt(wholePart[0]);
    	finalPieces[0] = wholeNum;
    	String[] fracPart = wholePart[1].split("/");
    	finalPieces[1] = Integer.parseInt(fracPart[0]);
    	finalPieces[2] = Integer.parseInt(fracPart[1]);
    	return("whole:" + finalPieces[0] +" numerator:" + finalPieces[1] + " denominator:" + finalPieces[2]);
    }
}
